static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              cors:
                allow_origin_string_match:
                - safe_regex:
                    google_re2: {}
                    regex: \*
                allow_methods: "POST,GET,OPTIONS,PUT,DELETE"
                allow_headers: "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, token"
              routes:
              - match:
                  prefix: "/auth"
                route:
                  cluster: auth_service
              - match:
                  prefix: "/users"
                route:
                  cluster: users_service
              - match:
                  prefix: "/posts"
                route:
                  cluster: posts_service
              - match:
                  prefix: "/media"
                route:
                  cluster: media_service
              - match:
                  prefix: "/"
                route:
                  cluster: web_service
          http_filters:
          - name: envoy.filters.http.cors
            typed_config: {}
          - name: envoy.filters.http.router
            typed_config: {}

  clusters:
    - name: auth_service
      connect_timeout: 0.25s
      type: strict_dns
      http2_protocol_options: {}
      lb_policy: round_robin
      load_assignment:
        cluster_name: auth_service
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: auth
                  port_value: 8000

    - name: posts_service
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: posts_service
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: posts
                  port_value: 8000

    - name: users_service
      connect_timeout: 0.25s
      type: strict_dns
      http2_protocol_options: {}
      lb_policy: round_robin
      load_assignment:
        cluster_name: users_service
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: users
                  port_value: 8000

    - name: media_service
      connect_timeout: 0.25s
      type: strict_dns
      http2_protocol_options: {}
      lb_policy: round_robin
      load_assignment:
        cluster_name: media_service
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: media
                  port_value: 8000

    - name: web_service
      connect_timeout: 0.25s
      type: strict_dns
      http2_protocol_options: {}
      lb_policy: round_robin
      load_assignment:
        cluster_name: web_service
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: web
                  port_value: 8000

admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001

layered_runtime:
  layers:
    - name: static_layer_0
      static_layer:
        envoy:
          resource_limits:
            listener:
              example_listener_name:
                connection_limit: 10000
